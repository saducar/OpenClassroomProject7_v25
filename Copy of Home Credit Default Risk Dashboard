{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"srSD0Is2cbsT"},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7644,"status":"ok","timestamp":1664807949781,"user":{"displayName":"Rahul Golder","userId":"01941832479749076616"},"user_tz":-330},"id":"KS4OAn-obz2Z","outputId":"8ef39dd2-1477-4420-f592-bf62fedbf351"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive', force_remount = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zAJEOZ2IZrq2"},"outputs":[],"source":["# install streamlit\n","!pip install -q streamlit"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1664807952026,"user":{"displayName":"Rahul Golder","userId":"01941832479749076616"},"user_tz":-330},"id":"SHrId5EgeFHB","outputId":"b0e28312-9cfb-4423-bff5-cad35c4abc64"},"outputs":[{"name":"stdout","output_type":"stream","text":["/bin/bash: ./ngrok: No such file or directory\n"]}],"source":["!./ngrok authtoken 2FOqDfcAe7QGdeGt1BvQQBG1sFT_43VbzYTFkS883XJA7JJMJ\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2518,"status":"ok","timestamp":1664807954540,"user":{"displayName":"Rahul Golder","userId":"01941832479749076616"},"user_tz":-330},"id":"GlvXKcXoeSgS","outputId":"cc793e5d-8386-45e4-9e54-a00f33fce112"},"outputs":[{"name":"stdout","output_type":"stream","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: pyngrok in /usr/local/lib/python3.7/dist-packages (5.1.0)\n","Requirement already satisfied: PyYAML in /usr/local/lib/python3.7/dist-packages (from pyngrok) (6.0)\n"]}],"source":["!pip install pyngrok"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1763,"status":"ok","timestamp":1664807956300,"user":{"displayName":"Rahul Golder","userId":"01941832479749076616"},"user_tz":-330},"id":"KFVE7wVeeVFL","outputId":"abe26d53-87cc-4397-8d52-16109f3a9e01"},"outputs":[{"data":{"text/plain":["<NgrokTunnel: \"http://0666-35-198-243-26.ngrok.io\" -> \"http://localhost:80\">"]},"execution_count":25,"metadata":{},"output_type":"execute_result"}],"source":["from pyngrok import ngrok \n","public_url = ngrok.connect(port='8501')\n","public_url\n"]},{"cell_type":"code","execution_count":27,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2167,"status":"ok","timestamp":1664808440327,"user":{"displayName":"Rahul Golder","userId":"01941832479749076616"},"user_tz":-330},"id":"2uha2T3BegP2","outputId":"b3e2b17b-2c3f-4a9a-904a-100f3595339d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting /content/drive/MyDrive/CSX/P1/P11/streamlit_app.py\n"]}],"source":["%%writefile /content/drive/MyDrive/CSX/P1/P11/streamlit_app.py\n","import streamlit as st \n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import numpy as np\n","import pickle \n","\n","st.set_option('deprecation.showPyplotGlobalUse', False)\n","\n","st.title('Home Credit Default Risk')\n","\n","# loading the data\n","\n","@st.cache(allow_output_mutation=True)\n","def load_data(file):\n","    df = pd.read_csv(f'/content/drive/MyDrive/CSX/P1/Project7V3/{file}.csv')\n","    return df\n","\n","train_df = load_data('train_data_domain')\n","result = load_data('result')\n","\n","st.subheader('Distribution of Variables')\n","variables = st.selectbox(\n","  'Choose Variable for Histogram Plot',\n","  ('DAYS_BIRTH', 'EXT_SOURCE_2', 'EXT_SOURCE_3', 'CREDIT_INCOME_PERCENT', \n","  'ANNUITY_INCOME_PERCENT','CREDIT_TERM','DAYS_EMPLOYED_PERCENT'))\n","\n","fig1 = plt.figure(figsize=(10,8))\n","train_df[variables]=train_df[variables].abs()\n","sns.kdeplot(train_df.loc[train_df['TARGET']==0,variables]/365,label='target==0')\n","sns.kdeplot(train_df.loc[train_df['TARGET']==1,variables]/365,label='target==1')\n","plt.legend()\n","plt.xlabel(variables)\n","plt.ylabel('Density')\n","plt.title(f'Distribution of {variables} by target value')\n","st.pyplot(fig1)\n","\n","st.subheader('Correlation Heatmaps')\n","dataset = st.selectbox(\n","  'Choose data for Correlation Heatmap',\n","  ('Credit_Card_Balance', 'Installments_Payments', 'Previous_Application'))\n","\n","fig2 = plt.figure(figsize=(20,15))\n","df = load_data(dataset)\n","corr = df.corr().abs()\n","sns.heatmap(corr, cmap=plt.cm.RdYlBu_r, vmin=-0.25, annot=True, vmax=0.6)\n","plt.title('Correlation Heatmap')\n","plt.savefig(\"/content/drive/MyDrive/CSX/P1/Project7V3/\"+dataset+\".png\")\n","st.pyplot(fig2)\n","\n","# Pie Chart\n","\n","st.write('Pie Chart')\n","fig3 = plt.figure(figsize=(8, 8))\n","\n","labels=['Default', 'Non-Default']\n","sizes=[result[result['Class']==1]['Class'].count(), result[result['Class']==0]['Class'].count()]\n","\n","plt.pie(sizes, labels=labels, \n","        autopct='%1.1f%%', \n","        shadow=True,\n","        startangle=200,\n","        explode = [0, 0.1])\n","\n","plt.axis('equal')\n","plt.savefig(\"/content/drive/MyDrive/CSX/P1/Project7V3/PieChart.png\")\n","st.pyplot(fig3)\n","\n","# Credit Amount \n","\n","st.write('Credit Amount')\n","amtCredit=result.sort_values(by='AMT_CREDIT', ascending=False)[['SK_ID_CURR', 'AMT_CREDIT']]\n","amtCredit.set_index('SK_ID_CURR')[:20].plot.barh(figsize=(10, 10))\n","plt.savefig(\"/content/drive/MyDrive/CSX/P1/Project7V3/CreditAmount.png\")\n","plt.show()\n","st.pyplot()\n","\n","focus={'AMT_CREDIT_PERCENT': \"the average between the loan and the income\",\n","       'AMT_APPLICATION':'For how much credit did client ask on the previous application',\n","       'DAYS_EMPLOYED':'How many days before the application the person started current employment',\n","       'DAYS_BIRTH':\"Client's age in days at the time of application\",\n","       'AMT_GOODS_PRICE':'Goods price of good that client asked for (if applicable) on the previous application',\n","       'AMT_ANNUITY_x':'Annuity of previous application',\n","       'AMT_INCOME_TOTAL':'Income of the client',\n","       'AMT_CREDIT':' Credit amount of the loan'}\n","\n","st.write(focus)\n","\n","st.subheader('Result Plots')\n","\n","try:\n","    id = st.text_input('Enter Client ID:')\n","    #id=394688\n","    prob = result.loc[result['SK_ID_CURR']==id]['TARGET'].values[0]*100\n","    st.write(f'The client {id} has a {str(round(prob, 1))}% risk of defaulting on their loan.')\n","except:\n","    pass\n","\n","try:\n","    result['SK_ID_CURR'] = result['SK_ID_CURR'].astype('str')\n","    result['DAYS_BIRTH'] = abs(result['DAYS_BIRTH'])\n","    client = result[result['SK_ID_CURR']==id]\n","    sameClass = result[result['Class']==int(client['Class'].values[0])]\n","    if int(client['Class'])==1:\n","        oppClass=result[result['Class']==0]\n","    else:\n","        oppClass=result[result['Class']==1]\n","\n","    for key, val in focus.items():\n","\n","        temp = pd.DataFrame(columns=['Target','Average','SameGroup','OppGroup'])\n","        temp['Target']=client[key]\n","        temp['Average']=np.average(result[key].values)\n","        temp['SameGroup']=np.average(sameClass[key].values)\n","        temp['OppGroup']=np.average(oppClass[key].values)\n","        temp = temp.T\n","        fig4 = plt.figure(figsize=(10, 5))\n","        plt.barh(temp.index, temp[temp.columns[0]], color=plt.cm.Accent_r(np.arange(len(temp))))\n","        plt.title(key)\n","        plt.savefig(\"/content/drive/MyDrive/CSX/P1/Project7V3/\"+key+\".png\")\n","        plt.show()\n","        st.pyplot(fig4)\n","except:\n","  print('Please enter client ID again')\n","\n","st.write('Predicting the credit is default or not')\n","\n","# Utility function\n","def yes_no(value):\n","    if value==\"Yes\":\n","       return 1\n","    else:\n","       return 0\n","\n","st.write('Choose the feature values')\n","\n","own_car = st.selectbox(\n","  'Choose whether client owned Car or not',\n","  (\"Yes\", \"No\"))\n","own_car = yes_no(own_car)\n","\n","own_realty = st.selectbox(\n","  'Choose whether client owned Realty or not',\n","  (\"Yes\", \"No\"))\n","own_realty = yes_no(own_realty)\n","\n","days_birth = st.number_input('Enter the Days of Birth:')\n","\n","days_employed = st.number_input('Enter the Days of Employed:')\n","\n","income_amt = st.number_input('Enter the Income Amount:')\n","\n","credit_amt = st.number_input('Enter the Credit Amount:')\n","\n","# Create a empty dataframe\n","df = pd.DataFrame()\n","# These values comes from web app\n","df['FLAG_OWN_CAR'] = [own_car]\n","df['FLAG_OWN_REALTY'] = [own_realty]\n","df['DAYS_BIRTH'] = [days_birth]\n","df['DAYS_EMPLOYED'] = [days_employed]\n","df['AMT_INCOME_TOTAL'] = [income_amt]\n","df['AMT_CREDIT'] = [credit_amt]\n","\n","# These values are calculated by taking majority votes\n","# data['feature'].value_counts().argmax()\n","\n","df['NAME_CONTRACT_TYPE_x'] = 0\n","df['CODE_GENDER'] = 0\n","df['CNT_CHILDREN'] = 0\n","df['NAME_TYPE_SUITE'] = 0\n","df['NAME_INCOME_TYPE'] = 0\n","df['NAME_EDUCATION_TYPE'] = 0\n","df['NAME_FAMILY_STATUS'] = 0\n","df['NAME_HOUSING_TYPE'] = 0\n","df['FLAG_WORK_PHONE'] = 0\n","df['FLAG_PHONE'] = 0\n","df['FLAG_EMAIL'] = 0\n","df['REGION_RATING_CLIENT'] = 0\n","df['WEEKDAY_APPR_PROCESS_START_x'] = 0\n","df['HOUR_APPR_PROCESS_START_x'] = 0\n","df['REG_REGION_NOT_LIVE_REGION'] = 0\n","df['REG_REGION_NOT_WORK_REGION'] = 0\n","df['LIVE_REGION_NOT_WORK_REGION'] = 0\n","df['REG_CITY_NOT_LIVE_CITY'] = 0\n","df['REG_CITY_NOT_WORK_CITY'] = 0\n","df['LIVE_CITY_NOT_WORK_CITY'] = 0\n","df['FLAG_DOCUMENT_3'] = 0\n","df['FLAG_DOCUMENT_6'] = 0\n","df['FLAG_DOCUMENT_8'] = 0\n","df['FLAG_DOCUMENT_11'] = 0\n","df['FLAG_DOCUMENT_13'] = 0\n","df['FLAG_DOCUMENT_14'] = 0\n","df['FLAG_DOCUMENT_15'] = 0\n","df['FLAG_DOCUMENT_16'] = 0\n","df['FLAG_DOCUMENT_17'] = 0\n","df['FLAG_DOCUMENT_18'] = 0\n","\n","# These values are calculated by taking average\n","# data['feature'].mean()\n","df['AMT_ANNUITY_x'] = 29411.8\n","df['REGION_POPULATION_RELATIVE'] = 0.021226\n","df['DAYS_REGISTRATION'] = -4967.7\n","df['DAYS_ID_PUBLISH'] = 3051\n","df['CNT_FAM_MEMBERS'] = 2.1\n","df['EXT_SOURCE_2'] = 0.517936\n","df['EXT_SOURCE_3'] = 0.411173\n","df['OBS_30_CNT_SOCIAL_CIRCLE'] = 1.4\n","df['DEF_30_CNT_SOCIAL_CIRCLE'] = 0.1\n","df['DEF_60_CNT_SOCIAL_CIRCLE'] = 0.1\n","df['DAYS_LAST_PHONE_CHANGE'] = -1077.8\n","df['AMT_REQ_CREDIT_BUREAU_DAY'] = 0.0\n","df['AMT_REQ_CREDIT_BUREAU_WEEK'] = 0.0\n","df['AMT_REQ_CREDIT_BUREAU_MON'] = 0.0\n","df['AMT_REQ_CREDIT_BUREAU_QRT'] = 0.5\n","df['AMT_REQ_CREDIT_BUREAU_YEAR'] = 1.7\n","df['NAME_CONTRACT_TYPE_y'] = 0.76\n","df['AMT_ANNUITY_y'] = 15111.41113\n","df['AMT_APPLICATION'] = 154240.1683\n","df['AMT_GOODS_PRICE'] = 200458.1548\n","df['FLAG_LAST_APPL_PER_CONTRACT'] = 1.0\n","df['NFLAG_LAST_APPL_IN_DAY'] = 1.0\n","df['NAME_CASH_LOAN_PURPOSE'] = 22.64\n","df['NAME_CONTRACT_STATUS'] = 0.416\n","df['DAYS_DECISION'] = -899.8\n","df['NAME_PAYMENT_TYPE'] = 1.02\n","df['CODE_REJECT_REASON'] = 6.19\n","df['NAME_CLIENT_TYPE'] = 1.22\n","df['NAME_GOODS_CATEGORY'] = 17.66\n","df['NAME_PORTFOLIO'] = 2.67\n","df['NAME_PRODUCT_TYPE'] = 0.48\n","df['SELLERPLACE_AREA'] = 404.48\n","df['CNT_PAYMENT'] = 14.267221\n","df['NAME_YIELD_GROUP'] = 1.97\n","df['AMT_CREDIT_PERCENT'] = 3.167544\n","df['AMT_APPLICATION_PERCENT'] = 5.477633\n","df['AMT_GOODS_PRICE_PERCENT'] = 4.367816\n","\n","st.write(df)\n","\n","model = pickle.load(open('/content/drive/MyDrive/CSX/P1/Project7V3/lgbmodel.pkl', 'rb'))\n","prediction = model.predict(df)\n","submit = st.button('Predict Default')\n","\n","if submit:\n","\n","  if prediction==1:\n","    st.write('Home Credit is Default')\n","  else:\n","    st.write('Home Credit is not Default')\n"]},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1032,"status":"ok","timestamp":1664808665674,"user":{"displayName":"Rahul Golder","userId":"01941832479749076616"},"user_tz":-330},"id":"yuAFpYNFf0x0","outputId":"e5d4c5a7-ea42-4d7a-e7d4-c140244c2d17"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[34m  Stopping...\u001b[0m\n","^C\n"]}],"source":["!streamlit run /content/drive/MyDrive/CSX/P1/P11/streamlit_app.py & npx localtunnel --port 8501"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"z2Api3LDLKRP"},"outputs":[],"source":["import pandas as pd\n","\n","df = pd.read_csv(f'/content/drive/MyDrive/Openclassroom/Cas7/Project7V3/new_train_clean_data.csv')\n","df = df.drop('Unnamed: 0',axis=1)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OM-ErF-4XkpY"},"outputs":[],"source":["df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"twNx6fTr0MPi"},"outputs":[],"source":["df['TARGET'].value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xbCNNUnPztIe"},"outputs":[],"source":["import requests\n","# url = 'http://127.0.0.1:8000/score_predict'\n","# r = requests.post(url,json=df.to_json(orient='records'))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JNH2CfE6dzRb"},"outputs":[],"source":["df.dtypes[40:75]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FdITQ3GI3TzF"},"outputs":[],"source":[]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":[],"machine_shape":"hm","provenance":[{"file_id":"1tsxdL2TvENtDLqWhJxWM0kfWCynPjcsb","timestamp":1664373037333}]},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}